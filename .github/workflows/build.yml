
name: Deployment pipeline dev

on:
    push:
        branches:
            - master
env:
    IMAGE_BASE: ghcr.io/${{ github.repository }}

jobs:
    kompiler:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Hent tag
              run: |
                  echo "TAG=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
            # Brukes ukenummer i cache_key da pomene endrer seg alt for ofte.
            # Alternative key med cache fra forrige uke som blir lagret etterpå under CACHE_KEY.
            - name: Set cache key
              run: |
                  echo "CACHE_KEY=$(expr $(date +%V) - 1 + 1)" >> $GITHUB_ENV
                  echo "PREVIOUS_CACHE_KEY=$(expr $(date +%V) - 1)" >> $GITHUB_ENV
            - name: Hent Maven cache
              uses: actions/cache@v2.1.5
              with:
                  path: ~/.m2/repository
                  key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                  restore-keys: ${{ runner.os }}-maven-

            - name: Sett opp Java 16
              uses: actions/setup-java@v2
              with:
                  java-version: 16
                  distribution: 'adopt'

            - name: Kompiler
              run: |
                  mvn versions:set -DnewVersion=${TAG}
                  mvn clean install --batch-mode --quiet --settings .github/.m2/settings.xml
              env:
                  GITHUB_USERNAME: x-access-token
                  GITHUB_TOKEN: ${{ secrets.NOTIFICATION }} # Må ha denne fordi vi henter artifakt fra fp-felles.

            - name: Log into ghcr registry
              run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u x-access-token --password-stdin

            - name: Bygg, tag og push Docker image
              run: |
                  docker build --pull --tag ${IMAGE_BASE}:${TAG} --tag ${IMAGE_BASE}:latest .
                  docker push ${IMAGE_BASE} --all-tags

            - name: Lukk gamle bygg-issues
              uses: actions/github-script@v4.0.2
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      github.issues.listForRepo({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        state: 'open',
                        labels: ['deployment']
                      }).then(response => {
                        response.data.forEach(issue => {
                          github.issues.update({
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue_number: issue.number,
                            state: 'closed'
                          });
                        });
                      });
            -  name: Opprett deployment issue
               id: createdeployissue
               if: success()
               uses: actions/github-script@v4.0.2
               with:
                   github-token: ${{secrets.GITHUB_TOKEN}}
                   script: |
                       github.issues.create( {
                         owner: context.issue.owner,
                         repo: context.issue.repo,
                         labels: ['deployment'],
                         title: 'Deploy av ${{ env.TAG }}'})
                       .then(response => {
                               core.setOutput('number', response.data.number);
                        });

            - uses: navikt/github-app-token-generator@v1.1
              id: get-token
              with:
                  private-key: ${{ secrets.FP_PRIVATE_KEY }}
                  app-id: ${{ secrets.FP_APP_ID }}

            - name: Trigger tester for FP
              run: |
                  curl -XPOST -u "x-access-token:${{ steps.get-token.outputs.token }}" \
                  -H "Accept: application/vnd.github.v3+json" \
                  https://api.github.com/repos/navikt/fpsak-autotest/actions/workflows/trigger.yml/dispatches \
                  -d '{"ref":"master",
                          "inputs":{
                              "trigger": "${{ github.repository }}",
                              "version": "${{ env.TAG }}",
                              "issue_number": "${{ steps.createdeployissue.outputs.number }}"
                          }}'
