management:
  metrics:
    web:
      server:
        request:
          autotime:
            enabled: true
  endpoint:
    health:
      show-details: never
  endpoints:
    web:
      exposure:
        include: info, health, metrics, prometheus, env, configprops, beans
  health:
    ping:
      enabled: false
    diskspace:
      enabled: false
server:
  servlet:
    context-path: /api

spring:
  cloud.discovery.client.health-indicator.enabled: false
  codec:
    max-in-memory-size: 32MB
  cache:
    cache-names: akt√∏r, organisasjon
    caffeine:
      spec: maximumSize=100,expireAfterAccess=3600s
  application:
    name: fpsoknad-mottak
  kafka:
    producer:
      bootstrap-servers: ${bootstrap.servers}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  main:
    banner-mode: off
springdoc:
  packages-to-scan: no.nav.foreldrepenger.mottak
  swagger-ui:
    disable-swagger-default-url: true

mottak:
  sender:
    domainevent:
      enabled: true
      topic: teamforeldrepenger.selvbetjening-innsendinghendelse-v1
no.nav.security:
  jwt:
    dont-propagate-bearertoken: true
    client:
      registration:
        fpinfo:
          well-known-url: ${token.x.well.known.url}
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-id: ${token.x.client.id}
            client-jwk: ${token.x.private.jwk}
            client-auth-method: private_key_jwt
        fpfordel:
          well-known-url: ${token.x.well.known.url}
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-id: ${token.x.client.id}
            client-jwk: ${token.x.private.jwk}
            client-auth-method: private_key_jwt
        pdl-api:
          well-known-url: ${token.x.well.known.url}
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-id: ${token.x.client.id}
            client-jwk: ${token.x.private.jwk}
            client-auth-method: private_key_jwt
        aareg-services:
          well-known-url: ${token.x.well.known.url}
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-id: ${token.x.client.id}
            client-jwk: ${token.x.private.jwk}
            client-auth-method: private_key_jwt
        digdir-krr-proxy:
          well-known-url: ${token.x.well.known.url}
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-id: ${token.x.client.id}
            client-jwk: ${token.x.private.jwk}
            client-auth-method: private_key_jwt
        client-credentials-pdl:
          token-endpoint-url: ${azure.openid.config.token.endpoint}
          grant-type: client_credentials
          authentication:
            client-id: ${azure.app.client.id}
            client-jwk: ${azure.app.jwk}
            client-auth-method: private_key_jwt
        sokos-kontoregister-person:
          well-known-url: ${token.x.well.known.url}
          grant-type: urn:ietf:params:oauth:grant-type:token-exchange
          authentication:
            client-id: ${token.x.client.id}
            client-jwk: ${token.x.private.jwk}
            client-auth-method: private_key_jwt
    issuer:
      tokenx:
        discovery-url: ${token.x.well.known.url}
        accepted-audience: ${token.x.client.id}
