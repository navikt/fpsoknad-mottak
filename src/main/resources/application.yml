arbeidsforhold:
    base-uri: https://modapp.adeo.no/aareg-services/api 
    sporingsinformasjon: true 
    
organisasjon:
    base-uri: https://modapp.adeo.no/ereg/api  
      
sts:
  base-uri:  https://security-token-service.nais.adeo.no
  username: ${kafka.username}
  password: ${kafka.password} 
  
sak:
  securitytokenservice:
    username: ${securitytokenservice.username}
    password : ${securitytokenservice.password}
    url: ${securitytokenservice.url} 
  saker:  
     url: https://sak.nais.adeo.no/api/v1/saker
     
securitytokenservice:
    username: ${kafka.username}
    password : ${kafka.password}
    url: https://sts.adeo.no/SecurityTokenServiceProvider/       
          
varsel:
   uri: mq://a01apvl063.adeo.no:1414/MPLSC02
   channelname: P_FPSOKNAD_VARSEL
   queue-name: QA.P_VARSELPRODUKSJON.SEND_VARSEL
   username: srvappserver
   
mottak:
   sender:
      domainevent:
         enabled: true
         topic: fpsoknad-mottak
        
no.nav:
   security:
     jwt:
        issuer:
         selvbetjening:
            discoveryurl: ${loginservice.idporten.discovery.url}
            accepted_audience: ${loginservice.idporten.audience}  
            cookie_name: selvbetjening-idtoken
http:
   proxy: http://webproxy-nais.nav.no:8088

management:
   metrics:
      web:
         server:
            request:
               autotime:
                 enabled: true
   endpoint:
      health:
         show-details: never
   endpoints:
      web:
         exposure:
            include: info, health, metrics, prometheus, env, configprops, beans
   health:
      ping:
        enabled: false
      diskspace:
        enabled: false
      jms:
        enabled: false
server:
   servlet:
      context-path: /api

spring:
   cloud.discovery.client.health-indicator.enabled: false
   codec:
      max-in-memory-size: 32MB
   cache:
      cache-names: akt√∏r, organisasjon
      caffeine:
         spec: maximumSize=100,expireAfterAccess=3600s
   application:
      name: fpsoknad-mottak
   jackson:
      default-property-inclusion: non-absent
      mapper:
         accept-case-insensitive-enums: true
         accept-case-insensitive-properties: true
      deserialization:
         read-unknown-enum-values-using-default-value: true
         accept-single-value-as-array: true
         fail-on-unknown-properties: true
      serialization:
         write-empty-json-arrays: false
         fail-on-empty-beans: false
   kafka:
      properties:
         security:
            protocol: SASL_SSL
         sasl:
            mechanism: PLAIN
            jaas:
               config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${kafka.username}" password="${kafka.password}";
      consumer:
         enable-auto-commit: false
         bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443
         group-id: group_id
         auto-offset-reset: earliest
         key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
         value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      producer:
         bootstrap-servers: a01apvl00145.adeo.no:8443,a01apvl00146.adeo.no:8443,a01apvl00147.adeo.no:8443
         key-serializer: org.apache.kafka.common.serialization.StringSerializer
         value-serializer: org.apache.kafka.common.serialization.StringSerializer
   main:
      banner-mode: off
